{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "ProtocolsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/accords-prod-protocols"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "prod",
                  "accords",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/accords-prod-protocols:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/accords-prod-protocols:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:us-east-1:*:table/accords-prod",
                    "arn:aws:dynamodb:us-east-1:*:table/accords-prod-index/*",
                    "arn:aws:dynamodb:us-east-1:*:table/accords-prod-comments",
                    "arn:aws:dynamodb:us-east-1:*:table/accords-prod-actions",
                    "arn:aws:dynamodb:us-east-1:*:table/accords-prod-actions-index/*",
                    "arn:aws:dynamodb:us-east-1:*:table/accords-prod-dossiers",
                    "arn:aws:dynamodb:us-east-1:*:table/accords-prod-dossiers-index/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "accords",
              "prod",
              "us-east-1",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ProtocolsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/accords/prod/1518120483317-2018-02-08T20:08:03.317Z/accords.zip"
        },
        "FunctionName": "accords-prod-protocols",
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "SERVICE_NAME": "accords",
            "DYNAMODB_TABLE": "accords-prod",
            "PROTOCOL_INDEX": "accords-prod-index/*",
            "COMMENTS_TABLE": "accords-prod-comments",
            "ACTIONS_TABLE": "accords-prod-actions",
            "ACTIONS_INDEX": "accords-prod-actions-index/*",
            "DOSSIERS_TABLE": "accords-prod-dossiers",
            "DOSSIERS_INDEX": "accords-prod-dossiers-index/*"
          }
        }
      },
      "DependsOn": [
        "ProtocolsLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ProtocolsLambdaVersionGlRRrAqGObuPM6Q5FHznVCdPdkYeGAc5FPh0jbZp4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ProtocolsLambdaFunction"
        },
        "CodeSha256": "GlRRrAq+GObuPM6Q5FHznVCdPdkYeGAc5FPh0jb/Zp4="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "prod-accords"
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ProtocolsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ProtocolsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1518120483360": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "ApiGatewayMethodAny",
        "ApiGatewayMethodProxyVarAny"
      ]
    },
    "ProtocolsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ProtocolsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "pathmapping": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "DependsOn": [
        "ApiGatewayDeployment1518120483360"
      ],
      "Properties": {
        "BasePath": "(none)",
        "DomainName": "api.scottify.io",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "Stage": "prod"
      }
    },
    "ProtocolsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "accords-prod",
        "AttributeDefinitions": [
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "proposalId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "ratified",
            "AttributeType": "S"
          },
          {
            "AttributeName": "protocolNumber",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "proposalId",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "protocol-index",
            "KeySchema": [
              {
                "AttributeName": "ratified",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "protocolNumber",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ]
      }
    },
    "CommentsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "accords-prod-comments",
        "AttributeDefinitions": [
          {
            "AttributeName": "protocolNumber",
            "AttributeType": "N"
          },
          {
            "AttributeName": "commentDate",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "protocolNumber",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "commentDate",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    },
    "ActionsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "accords-prod-actions",
        "AttributeDefinitions": [
          {
            "AttributeName": "actionId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "actionDate",
            "AttributeType": "N"
          },
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "completed",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "actionId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "actionDate",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "user-actions",
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "completed",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ]
      }
    },
    "DossiersTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "accords-prod-dossiers",
        "AttributeDefinitions": [
          {
            "AttributeName": "subject",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "subject",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ProtocolsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ProtocolsLambdaVersionGlRRrAqGObuPM6Q5FHznVCdPdkYeGAc5FPh0jbZp4"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.us-east-1.amazonaws.com/prod"
          ]
        ]
      }
    },
    "DomainName": {
      "Value": "api.scottify.io"
    },
    "DistributionDomainName": {
      "Value": "dw5gmilqnylhf.cloudfront.net"
    }
  }
}